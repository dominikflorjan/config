global !p
def math():
    return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
    return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
    [x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
    return x != '0' and x != '0'

endglobal

snippet inc "Includegraphics" i
\includegraphics[width=$1\linewidth]{$2}
endsnippet

snippet dsubf "Subfigure env" b 
\begin{subfigure}[b]{${1:0.2\textwidth}}
	\includegraphics[width=\textwidth]{img/$2}
	\caption{$3}%
\end{subfigure}
$0
endsnippet

snippet document "Document template" b
\documentclass{article}

\usepackage{polski}

\title{$1}
\author{Dominik Florjan}

\begin{document}
\maketitle
$0
\end{document}
endsnippet

snippet tsub "Text subscript" iA
\textsubscript{$1} $0
endsnippet 

snippet tsup "Text superscript" iA
\textsuperscript{$1} $0
endsnippet 

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet mt "MoTe2" iA
MoTe\textsubscript{2} $0
endsnippet

snippet oo2 "O2" iA
O\textsubscript{2} $0
endsnippet

snippet dm "Display Math" wA
\[
	$1
\]
$0
endsnippet

snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet dfrac "Fraction derivative" iA 
\\frac{d$1}{d$2}$0
endsnippet

snippet pfrac "Fraction derivative" iA 
\\frac{\\partial $1}{\partial $2}$0
endsnippet

snippet vec "Vector (arrow)" iA
\vec{$1}$0
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet td "superscript" iA
^{$1}$0
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet
